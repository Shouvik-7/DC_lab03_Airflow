[2023-11-25T08:44:59.699+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: outcomes_dag.transform manual__2023-11-25T08:44:52.462989+00:00 [queued]>
[2023-11-25T08:44:59.703+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: outcomes_dag.transform manual__2023-11-25T08:44:52.462989+00:00 [queued]>
[2023-11-25T08:44:59.703+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 1
[2023-11-25T08:44:59.708+0000] {taskinstance.py:1382} INFO - Executing <Task(PythonOperator): transform> on 2023-11-25 08:44:52.462989+00:00
[2023-11-25T08:44:59.712+0000] {standard_task_runner.py:57} INFO - Started process 74 to run task
[2023-11-25T08:44:59.715+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'outcomes_dag', 'transform', 'manual__2023-11-25T08:44:52.462989+00:00', '--job-id', '6', '--raw', '--subdir', 'DAGS_FOLDER/outcomes_dag.py', '--cfg-path', '/tmp/tmpfkqmams6']
[2023-11-25T08:44:59.717+0000] {standard_task_runner.py:85} INFO - Job 6: Subtask transform
[2023-11-25T08:44:59.748+0000] {task_command.py:416} INFO - Running <TaskInstance: outcomes_dag.transform manual__2023-11-25T08:44:52.462989+00:00 [running]> on host 2386755a61be
[2023-11-25T08:44:59.786+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='outcomes_dag' AIRFLOW_CTX_TASK_ID='transform' AIRFLOW_CTX_EXECUTION_DATE='2023-11-25T08:44:52.462989+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2023-11-25T08:44:52.462989+00:00'
[2023-11-25T08:45:00.222+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:31: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['ts'] = pd.to_datetime(date_dim['ts'])

[2023-11-25T08:45:00.224+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:32: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['year'] = date_dim['ts'].apply(lambda x: int(x.year))

[2023-11-25T08:45:00.226+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:33: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['month'] = date_dim['ts'].apply(lambda x: int(x.month))

[2023-11-25T08:45:00.227+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:34: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['day'] = date_dim['ts'].apply(lambda x: int(x.day))

[2023-11-25T08:45:00.229+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:35: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['hour'] = date_dim['ts'].apply(lambda x: int(x.hour))

[2023-11-25T08:45:00.230+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['minute'] = date_dim['ts'].apply(lambda x: int(x.minute))

[2023-11-25T08:45:00.231+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:37: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['second'] = date_dim['ts'].apply(lambda x: int(x.second))

[2023-11-25T08:45:00.232+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:43: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['outcome_type'] = data['outcome_type'].apply(lambda x: str(x))

[2023-11-25T08:45:00.233+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['date_id'] = date_df['date_id']

[2023-11-25T08:45:00.235+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:53: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['outcome_type_id'] = data['outcome_type'].replace(outcome_map)

[2023-11-25T08:45:00.236+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:88: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  outcome_fct['outcome_id'] = list(range(1, len(outcome_fct) + 1))

[2023-11-25T08:45:01.659+0000] {python.py:194} INFO - Done. Returned value was: None
[2023-11-25T08:45:01.667+0000] {taskinstance.py:1400} INFO - Marking task as SUCCESS. dag_id=outcomes_dag, task_id=transform, execution_date=20231125T084452, start_date=20231125T084459, end_date=20231125T084501
[2023-11-25T08:45:01.714+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 0
