[2023-11-25T03:57:17.939+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: outcomes_dag.transform scheduled__2023-11-24T00:00:00+00:00 [queued]>
[2023-11-25T03:57:17.943+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: outcomes_dag.transform scheduled__2023-11-24T00:00:00+00:00 [queued]>
[2023-11-25T03:57:17.943+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 1
[2023-11-25T03:57:17.949+0000] {taskinstance.py:1382} INFO - Executing <Task(PythonOperator): transform> on 2023-11-24 00:00:00+00:00
[2023-11-25T03:57:17.952+0000] {standard_task_runner.py:57} INFO - Started process 81 to run task
[2023-11-25T03:57:17.955+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'outcomes_dag', 'transform', 'scheduled__2023-11-24T00:00:00+00:00', '--job-id', '8', '--raw', '--subdir', 'DAGS_FOLDER/outcomes_dag.py', '--cfg-path', '/tmp/tmpj2an8ock']
[2023-11-25T03:57:17.957+0000] {standard_task_runner.py:85} INFO - Job 8: Subtask transform
[2023-11-25T03:57:17.989+0000] {task_command.py:416} INFO - Running <TaskInstance: outcomes_dag.transform scheduled__2023-11-24T00:00:00+00:00 [running]> on host 249ddc905274
[2023-11-25T03:57:18.038+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='outcomes_dag' AIRFLOW_CTX_TASK_ID='transform' AIRFLOW_CTX_EXECUTION_DATE='2023-11-24T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-11-24T00:00:00+00:00'
[2023-11-25T03:57:19.870+0000] {python.py:194} INFO - Done. Returned value was: None
[2023-11-25T03:57:19.919+0000] {taskinstance.py:1400} INFO - Marking task as SUCCESS. dag_id=outcomes_dag, task_id=transform, execution_date=20231124T000000, start_date=20231125T035717, end_date=20231125T035719
[2023-11-25T03:57:19.970+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 0
[2023-11-25T04:56:07.669+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: outcomes_dag.transform scheduled__2023-11-24T00:00:00+00:00 [queued]>
[2023-11-25T04:56:07.673+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: outcomes_dag.transform scheduled__2023-11-24T00:00:00+00:00 [queued]>
[2023-11-25T04:56:07.673+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 1
[2023-11-25T04:56:07.678+0000] {taskinstance.py:1382} INFO - Executing <Task(PythonOperator): transform> on 2023-11-24 00:00:00+00:00
[2023-11-25T04:56:07.681+0000] {standard_task_runner.py:57} INFO - Started process 83 to run task
[2023-11-25T04:56:07.683+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'outcomes_dag', 'transform', 'scheduled__2023-11-24T00:00:00+00:00', '--job-id', '5', '--raw', '--subdir', 'DAGS_FOLDER/outcomes_dag.py', '--cfg-path', '/tmp/tmpxubh7819']
[2023-11-25T04:56:07.685+0000] {standard_task_runner.py:85} INFO - Job 5: Subtask transform
[2023-11-25T04:56:07.712+0000] {task_command.py:416} INFO - Running <TaskInstance: outcomes_dag.transform scheduled__2023-11-24T00:00:00+00:00 [running]> on host 9c18922f4e6b
[2023-11-25T04:56:07.752+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='outcomes_dag' AIRFLOW_CTX_TASK_ID='transform' AIRFLOW_CTX_EXECUTION_DATE='2023-11-24T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-11-24T00:00:00+00:00'
[2023-11-25T04:56:08.218+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:31: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['ts'] = pd.to_datetime(date_dim['ts'])

[2023-11-25T04:56:08.219+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:32: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['year'] = date_dim['ts'].apply(lambda x: int(x.year))

[2023-11-25T04:56:08.220+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:33: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['month'] = date_dim['ts'].apply(lambda x: int(x.month))

[2023-11-25T04:56:08.221+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:34: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['day'] = date_dim['ts'].apply(lambda x: int(x.day))

[2023-11-25T04:56:08.222+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:35: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['hour'] = date_dim['ts'].apply(lambda x: int(x.hour))

[2023-11-25T04:56:08.223+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['minute'] = date_dim['ts'].apply(lambda x: int(x.minute))

[2023-11-25T04:56:08.224+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:37: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['second'] = date_dim['ts'].apply(lambda x: int(x.second))

[2023-11-25T04:56:08.225+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:43: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['outcome_type'] = data['outcome_type'].apply(lambda x: str(x))

[2023-11-25T04:56:09.445+0000] {python.py:194} INFO - Done. Returned value was: None
[2023-11-25T04:56:09.466+0000] {taskinstance.py:1400} INFO - Marking task as SUCCESS. dag_id=outcomes_dag, task_id=transform, execution_date=20231124T000000, start_date=20231125T045607, end_date=20231125T045609
[2023-11-25T04:56:09.511+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 0
[2023-11-25T08:31:32.585+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: outcomes_dag.transform scheduled__2023-11-24T00:00:00+00:00 [queued]>
[2023-11-25T08:31:32.589+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: outcomes_dag.transform scheduled__2023-11-24T00:00:00+00:00 [queued]>
[2023-11-25T08:31:32.589+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 1
[2023-11-25T08:31:32.594+0000] {taskinstance.py:1382} INFO - Executing <Task(PythonOperator): transform> on 2023-11-24 00:00:00+00:00
[2023-11-25T08:31:32.597+0000] {standard_task_runner.py:57} INFO - Started process 107 to run task
[2023-11-25T08:31:32.600+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'outcomes_dag', 'transform', 'scheduled__2023-11-24T00:00:00+00:00', '--job-id', '5', '--raw', '--subdir', 'DAGS_FOLDER/outcomes_dag.py', '--cfg-path', '/tmp/tmpdr0a96_n']
[2023-11-25T08:31:32.602+0000] {standard_task_runner.py:85} INFO - Job 5: Subtask transform
[2023-11-25T08:31:32.634+0000] {task_command.py:416} INFO - Running <TaskInstance: outcomes_dag.transform scheduled__2023-11-24T00:00:00+00:00 [running]> on host 345afa9fabd7
[2023-11-25T08:31:32.681+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='outcomes_dag' AIRFLOW_CTX_TASK_ID='transform' AIRFLOW_CTX_EXECUTION_DATE='2023-11-24T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-11-24T00:00:00+00:00'
[2023-11-25T08:31:33.125+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:31: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['ts'] = pd.to_datetime(date_dim['ts'])

[2023-11-25T08:31:33.127+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:32: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['year'] = date_dim['ts'].apply(lambda x: int(x.year))

[2023-11-25T08:31:33.128+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:33: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['month'] = date_dim['ts'].apply(lambda x: int(x.month))

[2023-11-25T08:31:33.130+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:34: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['day'] = date_dim['ts'].apply(lambda x: int(x.day))

[2023-11-25T08:31:33.131+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:35: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['hour'] = date_dim['ts'].apply(lambda x: int(x.hour))

[2023-11-25T08:31:33.133+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['minute'] = date_dim['ts'].apply(lambda x: int(x.minute))

[2023-11-25T08:31:33.134+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:37: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['second'] = date_dim['ts'].apply(lambda x: int(x.second))

[2023-11-25T08:31:33.135+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:43: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['outcome_type'] = data['outcome_type'].apply(lambda x: str(x))

[2023-11-25T08:31:33.137+0000] {taskinstance.py:1937} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 192, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 209, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/etl_scripts/transform.py", line 86, in transform_data
    outcome_fct = create_outcome_fct(data, date_df, outcome_df)
NameError: name 'date_df' is not defined
[2023-11-25T08:31:33.145+0000] {taskinstance.py:1400} INFO - Marking task as FAILED. dag_id=outcomes_dag, task_id=transform, execution_date=20231124T000000, start_date=20231125T083132, end_date=20231125T083133
[2023-11-25T08:31:33.151+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 5 for task transform (name 'date_df' is not defined; 107)
[2023-11-25T08:31:33.193+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 1
[2023-11-25T08:44:58.318+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: outcomes_dag.transform scheduled__2023-11-24T00:00:00+00:00 [queued]>
[2023-11-25T08:44:58.322+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: outcomes_dag.transform scheduled__2023-11-24T00:00:00+00:00 [queued]>
[2023-11-25T08:44:58.322+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 1
[2023-11-25T08:44:58.327+0000] {taskinstance.py:1382} INFO - Executing <Task(PythonOperator): transform> on 2023-11-24 00:00:00+00:00
[2023-11-25T08:44:58.331+0000] {standard_task_runner.py:57} INFO - Started process 67 to run task
[2023-11-25T08:44:58.333+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'outcomes_dag', 'transform', 'scheduled__2023-11-24T00:00:00+00:00', '--job-id', '5', '--raw', '--subdir', 'DAGS_FOLDER/outcomes_dag.py', '--cfg-path', '/tmp/tmpkrocz5fm']
[2023-11-25T08:44:58.335+0000] {standard_task_runner.py:85} INFO - Job 5: Subtask transform
[2023-11-25T08:44:58.363+0000] {task_command.py:416} INFO - Running <TaskInstance: outcomes_dag.transform scheduled__2023-11-24T00:00:00+00:00 [running]> on host 2386755a61be
[2023-11-25T08:44:58.401+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='outcomes_dag' AIRFLOW_CTX_TASK_ID='transform' AIRFLOW_CTX_EXECUTION_DATE='2023-11-24T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-11-24T00:00:00+00:00'
[2023-11-25T08:44:58.862+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:31: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['ts'] = pd.to_datetime(date_dim['ts'])

[2023-11-25T08:44:58.864+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:32: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['year'] = date_dim['ts'].apply(lambda x: int(x.year))

[2023-11-25T08:44:58.866+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:33: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['month'] = date_dim['ts'].apply(lambda x: int(x.month))

[2023-11-25T08:44:58.872+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:34: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['day'] = date_dim['ts'].apply(lambda x: int(x.day))

[2023-11-25T08:44:58.873+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:35: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['hour'] = date_dim['ts'].apply(lambda x: int(x.hour))

[2023-11-25T08:44:58.875+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['minute'] = date_dim['ts'].apply(lambda x: int(x.minute))

[2023-11-25T08:44:58.884+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:37: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['second'] = date_dim['ts'].apply(lambda x: int(x.second))

[2023-11-25T08:44:58.889+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:43: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['outcome_type'] = data['outcome_type'].apply(lambda x: str(x))

[2023-11-25T08:44:58.897+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['date_id'] = date_df['date_id']

[2023-11-25T08:44:58.911+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:53: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['outcome_type_id'] = data['outcome_type'].replace(outcome_map)

[2023-11-25T08:44:58.914+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:88: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  outcome_fct['outcome_id'] = list(range(1, len(outcome_fct) + 1))

[2023-11-25T08:45:00.336+0000] {python.py:194} INFO - Done. Returned value was: None
[2023-11-25T08:45:00.369+0000] {taskinstance.py:1400} INFO - Marking task as SUCCESS. dag_id=outcomes_dag, task_id=transform, execution_date=20231124T000000, start_date=20231125T084458, end_date=20231125T084500
[2023-11-25T08:45:00.420+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 0
[2023-11-25T08:47:55.429+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: outcomes_dag.transform scheduled__2023-11-24T00:00:00+00:00 [queued]>
[2023-11-25T08:47:55.433+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: outcomes_dag.transform scheduled__2023-11-24T00:00:00+00:00 [queued]>
[2023-11-25T08:47:55.433+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 1
[2023-11-25T08:47:55.438+0000] {taskinstance.py:1382} INFO - Executing <Task(PythonOperator): transform> on 2023-11-24 00:00:00+00:00
[2023-11-25T08:47:55.444+0000] {standard_task_runner.py:57} INFO - Started process 68 to run task
[2023-11-25T08:47:55.448+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'outcomes_dag', 'transform', 'scheduled__2023-11-24T00:00:00+00:00', '--job-id', '5', '--raw', '--subdir', 'DAGS_FOLDER/outcomes_dag.py', '--cfg-path', '/tmp/tmpw99es34z']
[2023-11-25T08:47:55.450+0000] {standard_task_runner.py:85} INFO - Job 5: Subtask transform
[2023-11-25T08:47:55.484+0000] {task_command.py:416} INFO - Running <TaskInstance: outcomes_dag.transform scheduled__2023-11-24T00:00:00+00:00 [running]> on host 032cc147d54c
[2023-11-25T08:47:55.523+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='outcomes_dag' AIRFLOW_CTX_TASK_ID='transform' AIRFLOW_CTX_EXECUTION_DATE='2023-11-24T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-11-24T00:00:00+00:00'
[2023-11-25T08:47:55.980+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:31: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['ts'] = pd.to_datetime(date_dim['ts'])

[2023-11-25T08:47:55.982+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:32: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['year'] = date_dim['ts'].apply(lambda x: int(x.year))

[2023-11-25T08:47:55.983+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:33: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['month'] = date_dim['ts'].apply(lambda x: int(x.month))

[2023-11-25T08:47:55.984+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:34: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['day'] = date_dim['ts'].apply(lambda x: int(x.day))

[2023-11-25T08:47:55.985+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:35: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['hour'] = date_dim['ts'].apply(lambda x: int(x.hour))

[2023-11-25T08:47:55.987+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:36: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['minute'] = date_dim['ts'].apply(lambda x: int(x.minute))

[2023-11-25T08:47:55.988+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:37: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  date_dim['second'] = date_dim['ts'].apply(lambda x: int(x.second))

[2023-11-25T08:47:55.989+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:43: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['outcome_type'] = data['outcome_type'].apply(lambda x: str(x))

[2023-11-25T08:47:55.990+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['date_id'] = date_df['date_id']

[2023-11-25T08:47:55.993+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:53: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['outcome_type_id'] = data['outcome_type'].replace(outcome_map)

[2023-11-25T08:47:55.994+0000] {warnings.py:109} WARNING - /opt/***/dags/etl_scripts/transform.py:88: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  outcome_fct['outcome_id'] = list(range(1, len(outcome_fct) + 1))

[2023-11-25T08:47:57.398+0000] {python.py:194} INFO - Done. Returned value was: None
[2023-11-25T08:47:57.427+0000] {taskinstance.py:1400} INFO - Marking task as SUCCESS. dag_id=outcomes_dag, task_id=transform, execution_date=20231124T000000, start_date=20231125T084755, end_date=20231125T084757
[2023-11-25T08:47:57.472+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 0
